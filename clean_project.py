import os
import shutil

# –ü–∞–ø–∫–∏ –∏ —Ñ–∞–π–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å
CLEAN_PATHS = [
    '__pycache__',
    '*.pyc',
    '*.log',
    '*.sqlite3',
    'db.sqlite3',
    'media/',
    'staticfiles/',
]

# –ú–∏–≥—Ä–∞—Ü–∏–∏, –∫—Ä–æ–º–µ __init__.py
def clean_migrations():
    for root, dirs, files in os.walk('.'):
        if 'migrations' in root:
            for file in files:
                if file != '__init__.py' and file.endswith('.py'):
                    os.remove(os.path.join(root, file))
                    print(f'–£–¥–∞–ª–µ–Ω–∞ –º–∏–≥—Ä–∞—Ü–∏—è: {os.path.join(root, file)}')

# –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ —à–∞–±–ª–æ–Ω—É
def clean_by_pattern():
    import glob
    for pattern in CLEAN_PATHS:
        for path in glob.glob(f'**/{pattern}', recursive=True):
            try:
                if os.path.isfile(path):
                    os.remove(path)
                    print(f'–£–¥–∞–ª—ë–Ω —Ñ–∞–π–ª: {path}')
                elif os.path.isdir(path):
                    shutil.rmtree(path)
                    print(f'–£–¥–∞–ª–µ–Ω–∞ –ø–∞–ø–∫–∞: {path}')
            except Exception as e:
                print(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ {path}: {e}')

# –ó–∞–ø—É—Å–∫
if __name__ == '__main__':
    print('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É –ø—Ä–æ–µ–∫—Ç–∞...')
    clean_migrations()
    clean_by_pattern()
    print('‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.')
